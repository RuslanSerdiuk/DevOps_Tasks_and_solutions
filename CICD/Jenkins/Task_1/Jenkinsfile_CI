pipeline {
    agent { 
        label 'ubuntu' 
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }
    environment {
        DOCKERHUB_CREDENTIALS = credentials('DOKER-TOKEN')
    }
    stages {
        stage('Test Build') {
            agent {
                docker { 
                    image 'openjdk:11'
                    label 'windows' 
                }     
            }
            steps {
                sh 'chmod +x mvnw'
                sh './mvnw package -Dcheckstyle.skip'
            }
        }
        stage('SonarQube Analysis') {
            tools { 
                maven 'M3' 
            }
            environment {
                scannerHome = tool 'SonarqubeR'
            }
            steps {
                withSonarQubeEnv('SonarqubeR') {
                    sh 'chmod +x mvnw'
                    sh './mvnw clean verify -Dcheckstyle.skip sonar:sonar -Dsonar.projectKey=ruslan_serdiuk_my_test_repository_JG3s1Q_vxx44A1uS5rLh'
                }
            }
        }
        stage('Test-Static') {
            steps {
                sh 'docker build -f ./Dockerfile -t ruslanserdiuk/petclinic:$BUILD_NUMBER -t ruslanserdiuk/petclinic:latest .'
            }
        }
        stage('Login') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('Push') {
            steps {
                sh 'docker push ruslanserdiuk/petclinic:latest'
                sh 'docker push ruslanserdiuk/petclinic:$BUILD_NUMBER' 
            }
        }
    }
    post {
        always {
        sh 'docker logout'
        }  
    }
}
