
- name: Import the public key used by the package management system
  ansible.builtin.apt_key:
    url: https://www.mongodb.org/static/pgp/server-5.0.asc
    state: present

- name: Add specified repository into sources list
  ansible.builtin.apt_repository:
    repo: 'deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse'
    state: present

- name: install mongodb
  ansible.builtin.apt:
    pkg: mongodb-org
    state: latest
    update_cache: yes

- name: Stop Service mongod
  ansible.builtin.service:
    name: mongod
    state: stopped

- name: copy config file
  template:
    src: mongo_cnf.j2
    dest: "{{ item }}"
    mode: 0644
  loop:
      - /etc/mongo-demo.conf
      - /etc/mongodb-demo.conf

- name: Create mongo-demo service
  template:
    src: mongo-demo.service.j2
    dest: /usr/lib/systemd/system/mongo-demo.service
    mode: 0644

- name: Just force systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Start service mongo-demo
  ansible.builtin.service:
    name: mongo-demo
    state: started

- name: Install Python Tools
  apt:
    name:
      - python3
      - python3-pip
      - gcc
    update_cache: yes
    state: latest

- name: Install pymongo
  pip: name=pymongo state=latest

- name: Create a replicaset rs0
  community.mongodb.mongodb_replicaset:
    login_host: "{{ private_ip_primary_node }}"
    login_port: 27017
    login_user: admin
    login_password: "{{ admin_password }}"
    login_database: admin
    replica_set: rs0
    members:
      - host: "{{ public_dns_primary_node }}:27017"
      - host: "{{ public_dns_secondary_node }}:27017"
    validate: no

- name: Wait for the replicaset to stabilise after member addition
  community.mongodb.mongodb_status:
    replica_set: "rs0"
    validate: minimal
    poll: 5
    interval: 30

- name: Create AdminUser and password
  community.mongodb.mongodb_user:
    connection_options:
      - "readPreference=primary"
    database: admin
    name: admin
    password: "{{ admin_password }}"
    roles: "{{ item }}"
    state: present
  loop:
    - userAdminAnyDatabase
    - root
    - read

- name: Create Operating/Testing - Databases/Users
  community.mongodb.mongodb_user:
    login_host: "{{ private_ip_primary_node }}"
    login_port: 27017
    login_user: admin
    login_password: "{{ admin_password }}"
    database: "{{ item.db }}"
    name: "{{ item.name }}"
    password: "{{ item.pw }}"
    roles: "dbOwner"
    state: present
  loop:
    - { db: 'operating', name: 'operating', pw: "{{ operating_pw }}" }
    - { db: 'testing', name: 'testing', pw: "{{ testing_pw }}" }


- name: Create TEST db and User
  community.mongodb.mongodb_user:
    login_host: "{{ private_ip_primary_node }}"
    login_port: 27017
    login_user: admin
    login_password: "{{ admin_password }}"
    database: "Test"
    name: "Ruslan"
    password: "{{ test_password }}"
    roles: "dbOwner"